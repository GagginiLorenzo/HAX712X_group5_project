[
  {
    "objectID": "occitanie.html",
    "href": "occitanie.html",
<<<<<<< HEAD
    "title": "Charger les données depuis le CSV",
    "section": "",
    "text": "import folium import json import random import pandas as pd from io import StringIO from datetime import datetime import requests\n\nCharger les données depuis le CSV\ndata = “““nom_dept,nom_com,nom_station,x_wgs84,y_wgs84 ARIEGE,SAINT-GIRONS,St-Girons Urbain,1.13943,42.99 AVEYRON,RODEZ,Rodez - Camonil Urbain,2.5707,44.357 GARD,ALES,Ales Vauban fond,4.07548,44.1259 GARD,LA CALMETTE,La Calmette - Périurbain,4.26581,43.9254 GARD,NIMES,Nîmes - Planas - Trafic,4.36199,43.8299 GARD,NIMES,Nîmes Sud - Urbain,4.37422,43.8344 GARD,SAZE,Saze - rural,4.67969,43.9429 GERS,AUCH,AUCH ST EXUPERY,0.59467,43.6511 GERS,GAUDONVILLE,Gaudonville Rural,0.845617,43.884 GERS,PEYRUSSE-VIEILLE,Peyrusse Vieille Rural,0.179722,43.6303 HAUTE-GARONNE,BELESTA-EN-LAURAGAIS,Belesta en Lauragais Rural,1.82194,43.4414 HAUTE-GARONNE,BESSIERES,Bessières-ECONOTRE Industriel,1.59583,43.8039 HAUTE-GARONNE,BLAGNAC,Blagnac Aéroport Piste ,1.37725,43.6253 HAUTE-GARONNE,BLAGNAC,Blagnac Aéroport Trafic ,1.37572,43.6335 HAUTE-GARONNE,MIRAMONT-DE-COMMINGES,Saint Gaudens-Miramont Industriel,0.744722,43.0944 HAUTE-GARONNE,MONTGISCARD,Montgiscard Périurbain,1.57111,43.4575 HAUTE-GARONNE,SAINT-GAUDENS,Saint Gaudens-Daurat Industriel,0.718889,43.1064 HAUTE-GARONNE,TOULOUSE,Station Pedagogique,1.38541,43.597 HAUTE-GARONNE,TOULOUSE,Toulouse - Port de l Embouchure Trafic,1.41518,43.6103 HAUTE-GARONNE,TOULOUSE,Toulouse - Rte Albi Trafic,1.46765,43.6431 HAUTE-GARONNE,TOULOUSE,Toulouse-Berthelot Urbain,1.44403,43.5873 HAUTE-GARONNE,TOULOUSE,Toulouse-Jacquier Urbain,1.41807,43.5757 HAUTE-GARONNE,TOULOUSE,Toulouse-Mazades Urbain,1.43861,43.6236 HAUTE-GARONNE,TOULOUSE,Toulouse-Périphérique Trafic,1.44959,43.574 HAUTE-GARONNE,TOULOUSE,Toulouse-SETMI Chapitre Industriel,1.40392,43.5564 HAUTE-GARONNE,TOULOUSE,Toulouse-SETMI Eisenhower Industriel,1.39326,43.5616 HAUTES-PYRENEES,ARGELES-GAZOST,Argeles-Gazost,-0.0950538,43.0075 HAUTES-PYRENEES,LOURDES,Lourdes-Lapaca Urbain,-0.038889,43.0969 HAUTES-PYRENEES,TARBES,Tarbes-Dupuy Urbain,0.062222,43.2303 HERAULT,AGDE,Agathois-Piscénois - Périurbain,3.50483,43.2878 HERAULT,BEZIERS,Beziers Leclerc trafic,3.23734,43.3412 HERAULT,CORNEILHAN,Biterrois-Narbonnais - Rural,3.18881,43.4068 HERAULT,LATTES,Montpellier Sud - Périurbain,3.91156,43.5706 HERAULT,LUNEL-VIEL,Lunel-Viel - Industriel,4.08842,43.6758 HERAULT,MONTPELLIER,Montpelier Antigone Trafic,3.89574,43.6088 HERAULT,MONTPELLIER,Montpellier - Chaptal Urbain,3.86472,43.6117 HERAULT,MONTPELLIER,Montpellier - Pompignane Trafic,3.89861,43.61 HERAULT,MONTPELLIER,Montpellier - Prés d Arènes Urbain,3.88689,43.5915 HERAULT,MONTPELLIER,Montpellier - Saint Denis Trafic,3.8746,43.605”“”\n\n\nCharger les données dans un DataFrame pandas\ndf = pd.read_csv(StringIO(data))\n\n\nCharger le fichier GeoJSON\ngeojson_path = “departements-occitanie.geojson” with open(geojson_path) as f: geojson_data = json.load(f)\n\n\nCréer une carte centrée sur la région Occitanie\nm = folium.Map(location=[43.6, 1.44], zoom_start=8)\n\n\nFonction de style pour assigner une couleur aléatoire à chaque département\ndef style_function(feature): # Générez une couleur aléatoire au format hexadécimal color = “#{:06x}”.format(random.randint(0, 0xFFFFFF))\nreturn {\n    'fillColor': color,\n    'color': 'black',\n    'weight': 1,\n    'fillOpacity': 0.7\n}\n\n\nAjouter le GeoJSON à la carte avec la fonction de style\nfolium.GeoJson( geojson_data, style_function=style_function, ).add_to(m)\n\n\nAjouter un marqueur pour chaque station météorologique\nfor index, row in df.iterrows(): folium.Marker( location=[row[‘y_wgs84’], row[‘x_wgs84’]], popup=f”{row[‘nom_station’]} - {row[‘nom_com’]}, {row[‘nom_dept’]}” ).add_to(m)\n\n\nNouvelle partie pour les données de pollution\nurl = “https://services9.arcgis.com/7Sr9Ek9c1QTKmbwr/arcgis/rest/services/mesures_occitanie_journaliere_poll_princ/FeatureServer/0/query?where=1%3D1&outFields=nom_com,nom_station,code_station,typologie,nom_poll,valeur,date_debut,influence&outSR=4326&f=json”\nresponse = requests.get(url)\nif response.status_code == 200: data_atmo = response.json() else: print(f”La requête a échoué avec le code d’état {response.status_code}“)\n\n\nExtraire les données et les mettre dans un DataFrame\nrecords_atmo = data_atmo.get(‘features’, []) records_atmo_data = [record[‘attributes’] for record in records_atmo] df_atmo = pd.DataFrame(records_atmo_data)\n\n\nConvertir la colonne date_debut en format datetime\ndf_atmo[“date_debut”] = df_atmo[“date_debut”] / 1000 df_atmo[“date_debut”] = df_atmo[“date_debut”].apply(lambda : datetime.utcfromtimestamp())\n\n\nAjouter un marqueur pour chaque ville et polluant\nfor index, row in df_atmo.iterrows(): folium.Marker( location=[row[‘latitude’], row[‘longitude’]], # Assurez-vous que vous avez les colonnes latitude et longitude dans df_atmo popup=f”{row[‘nom_com’]} - {row[‘nom_poll’]} - {row[‘valeur’]} ({row[‘date_debut’]})“, icon=folium.Icon(color=‘red’) # Vous pouvez personnaliser l’icône en fonction du polluant ).add_to(m)\n\n\nEnregistrez la carte au format HTML\nm.save(“carte_interactive_occitanie_coloree.html”)"
=======
    "title": "carte",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport requests\n\n#supprimer les warnings\npd.options.mode.chained_assignment = None  # default='warn'\n\n#%%\nurl = \"https://services9.arcgis.com/7Sr9Ek9c1QTKmbwr/arcgis/rest/services/mesures_occitanie_journaliere_poll_princ/FeatureServer/0/query?where=1%3D1&outFields=nom_com,nom_station,code_station,typologie,nom_poll,valeur,date_debut,influence&outSR=4326&f=json\"\n\nresponse = requests.get(url)\n\nif response.status_code == 200:\n    data = response.json()\nelse:\n    print(f\"La requête a échoué avec le code d'état {response.status_code}\")\n\n\n#%%\nrecords = data.get('features', [])\nrecords_data = [record['attributes'] for record in records]\ndf_atmo = pd.DataFrame(records_data)\n\n# %%\ndf_atmo[\"date_debut\"] = df_atmo[\"date_debut\"]/1000\ndf_atmo[\"date_debut\"] = df_atmo[\"date_debut\"].apply(\n            lambda _: datetime.utcfromtimestamp(_)\n        )\n# nettoyage df\n#df = df.drop([\"date_fin\", \"statut_valid\", \"x_l93\", \"y_l93\", \"geom\", \"metrique\"], axis=1)\n\n# liste des villes et des polluants\nvilles = df_atmo[\"nom_com\"].unique().tolist()\nvilles.sort()\npolluants = df_atmo[\"nom_poll\"].unique().tolist()\npolluants.sort()\ndf_atmo\n\nC:\\Users\\hp\\AppData\\Local\\Temp\\ipykernel_11324\\2691145479.py:30: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n  lambda _: datetime.utcfromtimestamp(_)\n\n\n\n\n\n\n\n\n\nnom_com\nnom_station\ncode_station\ntypologie\nnom_poll\nvaleur\ndate_debut\ninfluence\n\n\n\n\n0\nMONTPELLIER\nMontpellier - Prés d Arènes Urbain\nFR50200\nUrbaine\nO3\n69.3\n2023-08-07\nFond\n\n\n1\nMONTPELLIER\nMontpellier - Prés d Arènes Urbain\nFR50200\nUrbaine\nO3\n66.7\n2023-08-08\nFond\n\n\n2\nMONTPELLIER\nMontpellier - Prés d Arènes Urbain\nFR50200\nUrbaine\nO3\n65.4\n2023-08-09\nFond\n\n\n3\nMONTPELLIER\nMontpellier - Prés d Arènes Urbain\nFR50200\nUrbaine\nO3\n72.8\n2023-08-10\nFond\n\n\n4\nMONTPELLIER\nMontpellier - Prés d Arènes Urbain\nFR50200\nUrbaine\nO3\n54.0\n2023-08-11\nFond\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\nSAINT-GELY-DU-FESC\nMontpellier Nord - Périurbain\nFR50204\nPériurbaine\nO3\n44.1\n2022-10-29\nFond\n\n\n996\nSAINT-GELY-DU-FESC\nMontpellier Nord - Périurbain\nFR50204\nPériurbaine\nO3\n53.2\n2022-10-30\nFond\n\n\n997\nSAINT-GELY-DU-FESC\nMontpellier Nord - Périurbain\nFR50204\nPériurbaine\nO3\n65.7\n2022-10-31\nFond\n\n\n998\nBEZIERS\nBeziers Leclerc trafic\nFR50226\nUrbaine\nPM10\n8.6\n2023-08-30\nTrafic\n\n\n999\nBEZIERS\nBeziers Leclerc trafic\nFR50226\nUrbaine\nPM10\n9.4\n2023-08-31\nTrafic\n\n\n\n\n1000 rows × 8 columns"
>>>>>>> b091fbf68a4cc7c624add3d62f18080aabd9d1ff
  },
  {
    "objectID": "carte.html",
    "href": "carte.html",
    "title": "carte",
    "section": "",
    "text": "import folium\nimport json\nimport random\nimport pandas as pd\nfrom io import StringIO  # Importez StringIO depuis io\n\n# Charger les données depuis le CSV\ndata = \"\"\"nom_dept,nom_com,nom_station,x_wgs84,y_wgs84\nARIEGE,SAINT-GIRONS,St-Girons Urbain,1.13943,42.99\nAVEYRON,RODEZ,Rodez - Camonil Urbain,2.5707,44.357\nGARD,ALES,Ales Vauban fond,4.07548,44.1259\nGARD,LA CALMETTE,La Calmette - Périurbain,4.26581,43.9254\nGARD,NIMES,Nîmes - Planas - Trafic,4.36199,43.8299\nGARD,NIMES,Nîmes Sud - Urbain,4.37422,43.8344\nGARD,SAZE,Saze - rural,4.67969,43.9429\nGERS,AUCH,AUCH ST EXUPERY,0.59467,43.6511\nGERS,GAUDONVILLE,Gaudonville Rural,0.845617,43.884\nGERS,PEYRUSSE-VIEILLE,Peyrusse Vieille Rural,0.179722,43.6303\nHAUTE-GARONNE,BELESTA-EN-LAURAGAIS,Belesta en Lauragais Rural,1.82194,43.4414\nHAUTE-GARONNE,BESSIERES,Bessières-ECONOTRE Industriel,1.59583,43.8039\nHAUTE-GARONNE,BLAGNAC,Blagnac Aéroport Piste ,1.37725,43.6253\nHAUTE-GARONNE,BLAGNAC,Blagnac Aéroport Trafic ,1.37572,43.6335\nHAUTE-GARONNE,MIRAMONT-DE-COMMINGES,Saint Gaudens-Miramont Industriel,0.744722,43.0944\nHAUTE-GARONNE,MONTGISCARD,Montgiscard Périurbain,1.57111,43.4575\nHAUTE-GARONNE,SAINT-GAUDENS,Saint Gaudens-Daurat Industriel,0.718889,43.1064\nHAUTE-GARONNE,TOULOUSE,Station Pedagogique,1.38541,43.597\nHAUTE-GARONNE,TOULOUSE,Toulouse - Port de l Embouchure Trafic,1.41518,43.6103\nHAUTE-GARONNE,TOULOUSE,Toulouse - Rte Albi Trafic,1.46765,43.6431\nHAUTE-GARONNE,TOULOUSE,Toulouse-Berthelot Urbain,1.44403,43.5873\nHAUTE-GARONNE,TOULOUSE,Toulouse-Jacquier Urbain,1.41807,43.5757\nHAUTE-GARONNE,TOULOUSE,Toulouse-Mazades Urbain,1.43861,43.6236\nHAUTE-GARONNE,TOULOUSE,Toulouse-Périphérique Trafic,1.44959,43.574\nHAUTE-GARONNE,TOULOUSE,Toulouse-SETMI Chapitre Industriel,1.40392,43.5564\nHAUTE-GARONNE,TOULOUSE,Toulouse-SETMI Eisenhower Industriel,1.39326,43.5616\nHAUTES-PYRENEES,ARGELES-GAZOST,Argeles-Gazost,-0.0950538,43.0075\nHAUTES-PYRENEES,LOURDES,Lourdes-Lapaca Urbain,-0.038889,43.0969\nHAUTES-PYRENEES,TARBES,Tarbes-Dupuy Urbain,0.062222,43.2303\nHERAULT,AGDE,Agathois-Piscénois - Périurbain,3.50483,43.2878\nHERAULT,BEZIERS,Beziers Leclerc trafic,3.23734,43.3412\nHERAULT,CORNEILHAN,Biterrois-Narbonnais - Rural,3.18881,43.4068\nHERAULT,LATTES,Montpellier Sud - Périurbain,3.91156,43.5706\nHERAULT,LUNEL-VIEL,Lunel-Viel - Industriel,4.08842,43.6758\nHERAULT,MONTPELLIER,Montpelier Antigone Trafic,3.89574,43.6088\nHERAULT,MONTPELLIER,Montpellier - Chaptal Urbain,3.86472,43.6117\nHERAULT,MONTPELLIER,Montpellier - Pompignane Trafic,3.89861,43.61\nHERAULT,MONTPELLIER,Montpellier - Prés d Arènes Urbain,3.88689,43.5915\nHERAULT,MONTPELLIER,Montpellier - Saint Denis Trafic,3.8746,43.605\n\"\"\"\n\n# Charger les données dans un DataFrame pandas\ndf = pd.read_csv(StringIO(data))  # Utilisez StringIO depuis io  \n# Charger le fichier GeoJSON\ngeojson_path = \"departements-occitanie.geojson\"\n\nwith open(geojson_path) as f:\n    geojson_data = json.load(f)\n\n\n# Créer une carte centrée sur la région Occitanie\nm = folium.Map(location=[43.6, 1.44], zoom_start=8)\n\n# Fonction de style pour assigner une couleur aléatoire à chaque département\ndef style_function(feature):\n    # Générez une couleur aléatoire au format hexadécimal\n    color = \"#{:06x}\".format(random.randint(0, 0xFFFFFF))\n    \n    return {\n        'fillColor': color,\n        'color': 'black',\n        'weight': 1,\n        'fillOpacity': 0.7\n    }\n\n# Ajouter le GeoJSON à la carte avec la fonction de style\nfolium.GeoJson(\n    geojson_data,\n    style_function=style_function,\n).add_to(m)\n\n# Ajouter un marqueur pour chaque station météorologique\nfor index, row in df.iterrows():\n    folium.Marker(\n        location=[row['y_wgs84'], row['x_wgs84']],\n        popup=f\"{row['nom_station']} - {row['nom_com']}, {row['nom_dept']}\"\n    ).add_to(m)\n# Enregistrez la carte au format HTML\nm.save(\"carte_interactive_occitanie_coloree.html\")"
  }
]