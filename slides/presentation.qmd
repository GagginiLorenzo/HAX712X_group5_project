---
title: "Occitanie air quality explorer"
author: "ABCHICHE Thiziri
 - BERNARD-REYMOND Guillaume
 - GAGGINI Lorenzo 
 - HAMOMI Majda "
format: 
  revealjs:
    theme: default
    scrollable: true

---

# Table des matières
   1) Introduction
   2) Traitement des données
   3) Visualisation
   4) Intégration et déploiement
   5) Conclusion 

# Introduction

**Objectifs :** un site interactif avec :

   * une carte intéractive 
   * différents types de graphiques 
   

::: {.notes}
 un ou plusieurs graphiques simultanément décrivant l'évolution d'une valeur de polluant  ou bien donnée du climat. Tout ceci pourra être conditionné en amont par d'autres choix notamment temporels. 
:::

# Traitement des données

<center>
![](./Images/traitement.svg){width=70%}
</center>

---

**Deux jeux de données :**

   * **Atmos** : mesures de différents polluants dans la région Occitanie. 

<center>
![](./Images/polluants.png){width=70%}
</center>

   * **Synop** : données météorologiques partout en France.



## Atmos

   * Influence des saisons ?
   * Influence des jours de la semaine ?
   * Influence des type d'émetteurs ?

<center>
![](./Images/questionnement.svg){width=40%}
</center>

---

### Variation selon les saisons ?

<center>
![](./Images/year.png){width=75%}
</center>

**Fonction de tracé :**

```{.python code-line-numbers="15-25"}
    for i in range(nb_stations):
        # on garde seulement les données de la station i
        df_pvs = df_pv.loc[df_pv["nom_station"] == nom_stations[i]]
        # transformation en datetime de date_debut
        df_pvs["date_debut"] = df_pvs["date_debut"].apply(
            lambda _: datetime.strptime(_, "%Y-%m-%d %H:%M:%S")
        )
        # datetime devient index
        df_pvs = df_pvs.set_index(["date_debut"])
        # on moyennise par jour
        axes[i].plot(df_pvs["valeur"].resample("d").mean())
```
---

### Effet week-end ?

<center>
![](./Images/week.png){height=75%}
</center>

**Fonction de tracé :**

```{.python}
# colonne avec le numéro des jours
        df_pvs["weekday"] = df_pvs.index.weekday
        # on regroupe par jour et on fait la moyenne
        pollution_week = (
            df_pvs.groupby(["weekday", df_pvs.index.hour])["valeur"]
            .mean()
            .unstack(level=0)
        )
```
---

### Influence des différents émetteurs ?

<center>
![](./Images/influ.svg)
</center>


```{.python code-line-numbers="1-3,12-16"}
pol_influ = df_atmo.groupby(['influence', 'nom_polluant'])[
    'valeur'].mean().round(1).unstack(level=0)
polluants = pol_influ.index.tolist()
```

# Visualisation
<!-- Diapositive 1 -->
##### Premier aperçu de la division par département de la carte de la région Occitanie, présenté sur cette figure interactive
<center>
  <img src="./Images/fig1.PNG" alt="Description de l'image" style="width: 70%; height: auto;">
</center>

<!-- Diapositive 2 -->
##### Visualisation des concentrations du polluant O3 à travers les différentes stations de mesure dans la région Occitanie.

<center>
  <img src="./Images/imO3.PNG" alt="Description de l'image" style="width: 70%; height: auto;">
</center>

<!-- Diapositive 3 -->
##### Analyse détaillée des niveaux de pollution en 03 au sein d'une station spécifique.

<center>
  <img src="./Images/im2O3.PNG" alt="Description de l'image" style="width: 70%; height: auto;">
</center>


# Intégration et déploiement

## Appel API

<center>
![](./Images/api.svg){width=75%}
</center>